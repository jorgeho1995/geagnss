/// <reference types="node" />
import stream = require('stream');
import { RtcmMessage } from '@gnss/rtcm';
import { Mountpoint } from '../mountpoint';
export interface AutoSourceEntryOptions {
    ignoreExisting: boolean;
    setDefault: boolean;
    geoNamesPlaces?: string;
    carrier: boolean;
    country: boolean;
    format: boolean;
    formatDetails: boolean;
    identifier: boolean;
    generator: boolean;
    location: boolean;
    navSystems: boolean;
    bitrate: boolean;
}
/**
 * Automatic sourcetable entry data filler
 *
 * Fills in missing fields in a mountpoint's sourcetable entry based on the data sent by the server.
 * Accepts a stream of {@code RtcmMessage} objects.
 */
export declare class AutoSourceEntry extends stream.Writable {
    private readonly mountpoint;
    private readonly sourceEntry;
    private readonly geoNames?;
    private readonly options;
    private carriers;
    private carriersInitialSet;
    private location?;
    private messages;
    private navSystems;
    private navSystemsInitialSet;
    private rtcmVersion;
    constructor(mountpoint: Mountpoint, options?: Partial<AutoSourceEntryOptions>);
    _write(message: RtcmMessage, encoding: string, callback: (error?: (Error | null)) => void): void;
    private updateLocation;
    private updateGenerator;
    private addToFormatDetails;
    private updateFormatDetails;
    private truncateFormatDetails;
    private updateBitrate;
    private updateRtcmVersion;
    private addToNavSystems;
    private updateNavSystems;
    private addToCarriers;
    private updateCarriers;
}
