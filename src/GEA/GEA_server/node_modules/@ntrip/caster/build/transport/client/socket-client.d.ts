/// <reference types="node" />
import tls = require('tls');
import { SingleConnectionTransport } from '../transport';
import { CasterTransportDefinition, CasterTransportInterface } from '../../caster';
export interface SocketClientTransportOptions {
    type: 'server' | 'client';
    mountpoint: string;
    remote: {
        host: string;
        port: number;
        family?: string;
    };
    tls?: tls.SecureContextOptions & tls.CommonConnectionOptions;
    str?: string;
    gga?: string;
}
export declare class SocketClientTransport extends SingleConnectionTransport {
    private readonly options;
    private socket;
    protected constructor(manager: CasterTransportInterface, options: SocketClientTransportOptions);
    static new(options: SocketClientTransportOptions): CasterTransportDefinition;
    open(): void;
    close(): void;
    get description(): string;
}
