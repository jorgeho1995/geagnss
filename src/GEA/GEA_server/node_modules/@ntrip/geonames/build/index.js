"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Place = exports.GeoNames = void 0;
var fs = __importStar(require("fs"));
var stream = __importStar(require("stream"));
var readline = __importStar(require("readline"));
var GeoNames = /** @class */ (function () {
    function GeoNames(path) {
        this.path = path;
    }
    GeoNames.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var file, lines, lines_1, lines_1_1, line, e_1_1;
            var e_1, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        file = fs.createReadStream(this.path);
                        lines = readline.createInterface({
                            input: file,
                            crlfDelay: Infinity
                        });
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 8, 9, 14]);
                        lines_1 = __asyncValues(lines);
                        _c.label = 2;
                    case 2: return [4 /*yield*/, __await(lines_1.next())];
                    case 3:
                        if (!(lines_1_1 = _c.sent(), !lines_1_1.done)) return [3 /*break*/, 7];
                        line = lines_1_1.value;
                        return [4 /*yield*/, __await(new Place(line))];
                    case 4: return [4 /*yield*/, _c.sent()];
                    case 5:
                        _c.sent();
                        _c.label = 6;
                    case 6: return [3 /*break*/, 2];
                    case 7: return [3 /*break*/, 14];
                    case 8:
                        e_1_1 = _c.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 14];
                    case 9:
                        _c.trys.push([9, , 12, 13]);
                        if (!(lines_1_1 && !lines_1_1.done && (_b = lines_1.return))) return [3 /*break*/, 11];
                        return [4 /*yield*/, __await(_b.call(lines_1))];
                    case 10:
                        _c.sent();
                        _c.label = 11;
                    case 11: return [3 /*break*/, 13];
                    case 12:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 13: return [7 /*endfinally*/];
                    case 14: return [2 /*return*/];
                }
            });
        });
    };
    GeoNames.prototype.stream = function () {
        var transform = new stream.Transform({
            transform: function (line, encoding, callback) {
                callback(null, new Place(line));
            }
        });
        var file = fs.createReadStream(this.path);
        readline.createInterface({
            input: file,
            output: transform,
            crlfDelay: Infinity
        });
        return transform;
    };
    GeoNames.prototype.nearest = function (to) {
        var e_2, _a;
        return __awaiter(this, void 0, void 0, function () {
            var closestPlace, minDistance, _b, _c, place, distance_1, e_2_1;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        closestPlace = undefined;
                        minDistance = Infinity;
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 6, 7, 12]);
                        _b = __asyncValues(this);
                        _d.label = 2;
                    case 2: return [4 /*yield*/, _b.next()];
                    case 3:
                        if (!(_c = _d.sent(), !_c.done)) return [3 /*break*/, 5];
                        place = _c.value;
                        distance_1 = place.distance(to);
                        if (distance_1 < minDistance) {
                            minDistance = distance_1;
                            closestPlace = place;
                        }
                        _d.label = 4;
                    case 4: return [3 /*break*/, 2];
                    case 5: return [3 /*break*/, 12];
                    case 6:
                        e_2_1 = _d.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 12];
                    case 7:
                        _d.trys.push([7, , 10, 11]);
                        if (!(_c && !_c.done && (_a = _b.return))) return [3 /*break*/, 9];
                        return [4 /*yield*/, _a.call(_b)];
                    case 8:
                        _d.sent();
                        _d.label = 9;
                    case 9: return [3 /*break*/, 11];
                    case 10:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 11: return [7 /*endfinally*/];
                    case 12: return [2 /*return*/, closestPlace];
                }
            });
        });
    };
    return GeoNames;
}());
exports.GeoNames = GeoNames;
var TRANSFORMATIONS = [
    parseInt,
    null,
    null,
    function (e) { return e.split(','); },
    parseFloat,
    parseFloat,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    parseInt,
    parseInt,
    parseInt,
    null,
    Date.parse
];
var Place = /** @class */ (function () {
    function Place(line) {
        var _a;
        var elements = line.split('\t');
        _a = elements.map(function (e, i) { return TRANSFORMATIONS[i] === null ? e : TRANSFORMATIONS[i](e); }), this.id = _a[0], this.name = _a[1], this.asciiName = _a[2], this.alternativeNames = _a[3], this.latitude = _a[4], this.longitude = _a[5], this.featureClass = _a[6], this.featureCode = _a[7], this.countryCode = _a[8], this.alternativeCountryCode = _a[9], this.adminCode1 = _a[10], this.adminCode2 = _a[11], this.adminCode3 = _a[12], this.adminCode4 = _a[13], this.population = _a[14], this.elevation = _a[15], this.digitalElevationModel = _a[16], this.timezone = _a[17], this.modificationDate = _a[18];
    }
    Place.prototype.distance = function (to) {
        return distance(this, to);
    };
    return Place;
}());
exports.Place = Place;
var EARTH_RADIUS = 6378137;
function distance(a, b) {
    if ((a.latitude === b.latitude) && (a.longitude === b.longitude))
        return 0;
    var aLatitude = a.latitude * Math.PI / 180;
    var bLatitude = a.longitude * Math.PI / 180;
    var theta = (a.longitude - b.longitude) * Math.PI / 180;
    return Math.acos(Math.max(-1, Math.min(1, Math.sin(aLatitude) * Math.sin(bLatitude)
        + Math.cos(aLatitude) * Math.cos(bLatitude) * Math.cos(theta)))) * EARTH_RADIUS;
}
