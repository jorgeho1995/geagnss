import { NmeaSentenceType } from "./mnemonics";
import { NmeaTalker } from "./talkers";
export declare function Sentence(type: NmeaSentenceType, delimiter?: NmeaTransport.SentenceDelimiter): <T extends NmeaMessage>(constructor: new (internalGuard: never) => T) => void;
declare type TypeKeys<T, U> = {
    [P in keyof T]: U extends T[P] ? P : never;
}[keyof T];
declare type FunctionKeys<T> = TypeKeys<T, (...args: any[]) => any>;
export declare abstract class NmeaMessage {
    static readonly sentenceType: NmeaSentenceType;
    static readonly sentenceDelimiter: NmeaTransport.SentenceDelimiter;
    get sentenceType(): NmeaSentenceType | string;
    get sentenceDelimiter(): NmeaTransport.SentenceDelimiter;
    talker: NmeaTalker | string;
    constructor(internalGuard: never);
    static construct<T extends NmeaMessage>(this: (new (internalGuard: never) => T), params: Omit<T, 'sentenceType' | 'sentenceDelimiter' | FunctionKeys<T>>): T;
}
export declare class NmeaMessageUnknown extends NmeaMessage {
    get sentenceType(): NmeaSentenceType | string;
    get sentenceDelimiter(): NmeaTransport.SentenceDelimiter;
    unknownSentenceType: NmeaSentenceType | string;
    unknownSentenceDelimiter: NmeaTransport.SentenceDelimiter;
    elements?: string[];
}
export declare class NmeaMessageProprietary extends NmeaMessageUnknown {
    get manufacturerMnemonic(): string;
}
export declare class NmeaMessageQuery extends NmeaMessage {
    get sentenceType(): NmeaSentenceType | string;
    queriedTalker: NmeaTalker | string;
    queriedSentenceType: NmeaSentenceType | string;
}
export declare namespace NmeaTransport {
    const MAX_SENTENCE_SIZE = 82;
    const SENTENCE_DELIMITER_PARAMETRIC = "$";
    const SENTENCE_DELIMITER_ENCAPSULATION = "!";
    const DATA_FIELD_DELIMITER = ",";
    const CHECKSUM_FIELD_DELIMITER = "*";
    const CODE_DELIMITER = "^";
    const TAG_BLOCK_DELIMITER = "\\";
    const RESERVED_FUTURE_USE_CHARACTERS: string[];
    const SENTENCE_TERMINATION_SEQUENCE = "\r\n";
    type SentenceDelimiter = typeof SENTENCE_DELIMITER_PARAMETRIC | typeof SENTENCE_DELIMITER_ENCAPSULATION;
    const RESERVED_CHARACTERS: string[];
    const QUERY_ADDRESS_CHARACTER = "Q";
    class Exception extends Error {
        constructor(type: string, message: string);
    }
    class DecodeException extends Exception {
        constructor(message: string);
    }
    class EncodeException extends Exception {
        constructor(message: string);
    }
    function decode(sentence: string): NmeaMessage;
    function encode(message: NmeaMessage): string;
    function checksum(sentence: string): string;
    function escape(field: string): string;
    function unescape(field: string): string;
}
import './messages/index';
export {};
