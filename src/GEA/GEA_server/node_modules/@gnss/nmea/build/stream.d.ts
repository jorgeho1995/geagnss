/// <reference types="node" />
import stream = require('stream');
import { NmeaMessage } from './nmea';
export declare class NmeaDecodeTransformStream extends stream.Transform {
    private readonly buffer;
    private index;
    private synchronized;
    private potential;
    private readonly closeOnError;
    constructor({ closeOnError, synchronizedInitially }?: {
        closeOnError?: boolean;
        synchronizedInitially?: boolean;
    });
    private static nextSentenceDelimiter;
    _transform(chunk: Buffer | string, encoding: string, callback: (error?: (Error | null), data?: any) => void): void;
}
export declare class NmeaEncodeTransformStream extends stream.Transform {
    constructor();
    _transform(message: NmeaMessage, encoding: string, callback: (error?: (Error | null), data?: any) => void): void;
}
