import 'reflect-metadata';
declare class Coder {
    private readonly parent?;
    private static readonly definitions;
    static define(definition: any): string;
    private readonly definitions;
    private lines;
    constructor(parent?: Coder | undefined);
    code(...code: string[]): void;
    set(prop: any, code: string): void;
    get fullLines(): string[];
    get fullScript(): string;
    compiled?: (o: Object, e: string[], i: number) => [o: Object, i: number];
    run(o: Object, e: string[], i: number): [o: Object, i: number];
}
export declare namespace Helpers {
    namespace Float {
        function decode(val: string): number | undefined;
        function encode(val?: number): string;
    }
    namespace Int {
        function decode(val: string): number | undefined;
        function encode(val?: number, pad?: number): string;
    }
    namespace Hex {
        function decode(val: string): number | undefined;
        function encode(val?: number, pad?: number): string;
    }
    namespace String {
        function decode(val: string): string | undefined;
        function encode(val?: string): string;
    }
    namespace Chars {
        function decode(val: string): string[] | undefined;
        function encode(val?: string[]): string;
    }
    namespace Direction {
        function decode(val: string, pos: string, neg: string): 1 | -1;
        function encode(val: number | undefined, pos: string, neg: string): string;
    }
    namespace Time {
        function decode(val: string): Date | undefined;
        function encode(val?: Date): string;
    }
    namespace ShortDate {
        function decode(val: string): Date | undefined;
        function encode(val?: Date): string;
    }
    namespace FullDate {
        function decode(val: string): Date | undefined;
        function encode(val?: Date): string;
    }
    namespace CompleteDateTime {
        function decode(time: string, day: string, month: string, year: string): Date | undefined;
        function encode(val: Date): string[];
    }
    namespace Latitude {
        function decode(lat: string): number | undefined;
        function encode(lat?: number): string;
    }
    namespace Longitude {
        function decode(lng: string, ew: string): number | undefined;
        function encode(lng?: number): string;
    }
}
export declare class DecoderEncoder {
    private readonly parent?;
    readonly encoder: Coder;
    readonly decoder: Coder;
    static readonly helpers: string;
    constructor(parent?: DecoderEncoder | undefined);
    array(prop: string, count: string | number): void;
    object(prop: string, constructor: new () => any): void;
    apply(prop: any, helper: string, count?: number, ...args: any[]): void;
    directional(prop: any, helper: string, positive: string, negative: string): void;
    unit(prop: any, val: string): void;
}
export declare function getDecoderEncoder(target: any): DecoderEncoder;
export declare const Int: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Float: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Hex: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const PadInt: (pad: number) => (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const PadHex: (pad: number) => (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Chars: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Str: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Obj: (constructor: new () => any) => (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare function Arr(length: string | number, type: (target: any, propertyKey: any, descriptor?: PropertyDescriptor) => void): (target: any, propertyKey: any) => void;
export declare const Mag: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Lat: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Lng: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Time: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const ShortDate: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const FullDate: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const CompleteDateTime: (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export declare const Unit: (unit: string) => (target: any, propertyKey: any, descriptor?: PropertyDescriptor | undefined) => void;
export {};
