"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NmeaMessageGsa = void 0;
const nmea_1 = require("../nmea");
const enums_1 = require("../enums");
const mnemonics_1 = require("../mnemonics");
const decode_encode_1 = require("../decode-encode");
let NmeaMessageGsa = class NmeaMessageGsa extends nmea_1.NmeaMessage {
};
__decorate([
    decode_encode_1.Str,
    __metadata("design:type", String)
], NmeaMessageGsa.prototype, "operationMode", void 0);
__decorate([
    decode_encode_1.Int,
    __metadata("design:type", Number)
], NmeaMessageGsa.prototype, "navMode", void 0);
__decorate([
    decode_encode_1.Arr(12, decode_encode_1.PadInt(2)),
    __metadata("design:type", Array)
], NmeaMessageGsa.prototype, "satellites", void 0);
__decorate([
    decode_encode_1.Float,
    __metadata("design:type", Number)
], NmeaMessageGsa.prototype, "pdop", void 0);
__decorate([
    decode_encode_1.Float,
    __metadata("design:type", Number)
], NmeaMessageGsa.prototype, "hdop", void 0);
__decorate([
    decode_encode_1.Float,
    __metadata("design:type", Number)
], NmeaMessageGsa.prototype, "vdop", void 0);
__decorate([
    decode_encode_1.Hex,
    __metadata("design:type", Number)
], NmeaMessageGsa.prototype, "systemId", void 0);
NmeaMessageGsa = __decorate([
    nmea_1.Sentence(mnemonics_1.NmeaSentenceType.GSA)
], NmeaMessageGsa);
exports.NmeaMessageGsa = NmeaMessageGsa;
