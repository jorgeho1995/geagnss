import { RtcmMessage } from '../rtcm';
import { constructPropertiesKey } from '../utils';
export declare class RtcmMessageStationArp extends RtcmMessage {
    static [constructPropertiesKey]: (exclude: 'arpEcefX' | 'arpEcefY' | 'arpEcefZ' | 'arpEcef') => {
        arpEcefX: number;
        arpEcefY: number;
        arpEcefZ: number;
    } | {
        arpEcef: [number, number, number];
    };
    referenceStationId: number;
    _itrfRealizationYear: number;
    gpsIndicator: boolean;
    glonassIndicator: boolean;
    _galileoIndicator: boolean;
    referenceStationIndicator: boolean;
    arpEcefX: number;
    singleReceiverOscillatorIndicator: boolean;
    private skip2?;
    arpEcefY: number;
    quarterCycleIndicator: number;
    arpEcefZ: number;
    get arpEcef(): [number, number, number];
    set arpEcef(ecef: [number, number, number]);
}
export declare class RtcmMessageStationArpHeight extends RtcmMessageStationArp {
    antennaHeight: number;
}
export declare class RtcmMessagePhysicalReferenceStationPosition extends RtcmMessage {
    static [constructPropertiesKey]: (exclude: 'arpEcefX' | 'arpEcefY' | 'arpEcefZ' | 'arpEcef') => {
        arpEcefX: number;
        arpEcefY: number;
        arpEcefZ: number;
    } | {
        arpEcef: [number, number, number];
    };
    nonPhysicalReferenceStationId: number;
    physicalReferenceStationId: number;
    itrfEpochYear: number;
    arpEcefX: number;
    arpEcefY: number;
    arpEcefZ: number;
    get arpEcef(): [number, number, number];
    set arpEcef(ecef: [number, number, number]);
}
