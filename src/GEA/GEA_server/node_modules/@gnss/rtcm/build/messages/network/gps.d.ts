import { RtcmMessage } from '../../rtcm';
export declare class RtcmMessageGpsCorrectionDifferences extends RtcmMessage {
    networkId: number;
    subnetworkId: number;
    gpsEpochTime: number;
    multipleMessageIndicator: boolean;
    masterReferenceStationId: number;
    auxiliaryReferenceStationId: number;
    private _satelliteCount;
}
export declare class GpsCorrectionDifferencesBaseSatelliteData {
    satelliteId: number;
    ambiguityStatusFlag: number;
    nonSyncCount: number;
}
export declare class GpsIonosphericCorrectionDifferencesSatelliteData extends GpsCorrectionDifferencesBaseSatelliteData {
    ionosphericCarrierPhaseCorrectionDifference: number;
}
export declare class GpsGeometricCorrectionDifferencesSatelliteData extends GpsCorrectionDifferencesBaseSatelliteData {
    geometricCarrierPhaseCorrectionDifference: number;
    iode: number;
}
export declare class GpsCombinedCorrectionDifferencesSatelliteData extends GpsGeometricCorrectionDifferencesSatelliteData {
    ionosphericCarrierPhaseCorrectionDifference: number;
}
export declare class RtcmMessageGpsIonosphericCorrectionDifferences extends RtcmMessageGpsCorrectionDifferences {
    satellites: GpsIonosphericCorrectionDifferencesSatelliteData[];
}
export declare class RtcmMessageGpsGeometricCorrectionDifferences extends RtcmMessageGpsCorrectionDifferences {
    satellites: GpsGeometricCorrectionDifferencesSatelliteData[];
}
export declare class RtcmMessageGpsCombinedCorrectionDifferences extends RtcmMessageGpsCorrectionDifferences {
    satellites: GpsCombinedCorrectionDifferencesSatelliteData[];
}
export declare class GpsNetworkRtkResidualSatelliteData {
    satelliteId: number;
    s_oc: number;
    s_od: number;
    s_oh: number;
    s_ic: number;
    s_id: number;
}
export declare class RtcmMessageGpsNetworkRtkResidual extends RtcmMessage {
    residualsEpochTime: number;
    referenceStationId: number;
    nRefs: number;
    private _satelliteCount;
    satellites: GpsNetworkRtkResidualSatelliteData[];
}
export declare class GpsNetworkFkpGradientSatelliteData {
    satelliteId: number;
    iode: number;
    geometricGradientNorth: number;
    geometricGradientEast: number;
    ionosphericGradientNorth: number;
    ionosphericGradientEast: number;
}
export declare class RtcmMessageGpsNetworkFkpGradient extends RtcmMessage {
    referenceStationId: number;
    fkpEpochTime: number;
    private _satelliteCount;
    satellites: GpsNetworkFkpGradientSatelliteData[];
}
