import { constructPropertiesKey, FunctionKeys } from './utils';
import { DecoderEncoder } from './decode-encode';
export declare enum RtcmMessageType {
    UNKNOWN = -1,
    GPS_L1_OBSERVATIONS = 1001,
    GPS_L1_OBSERVATIONS_EXTENDED = 1002,
    GPS_L1_L2_OBSERVATIONS = 1003,
    GPS_L1_L2_OBSERVATIONS_EXTENDED = 1004,
    STATION_ARP = 1005,
    STATION_ARP_HEIGHT = 1006,
    ANTENNA_DESCRIPTOR = 1007,
    ANTENNA_DESCRIPTOR_SERIAL = 1008,
    GLONASS_L1_OBSERVATIONS = 1009,
    GLONASS_L1_OBSERVATIONS_EXTENDED = 1010,
    GLONASS_L1_L2_OBSERVATIONS = 1011,
    GLONASS_L1_L2_OBSERVATIONS_EXTENDED = 1012,
    AUXILIARY_OPERATION_INFORMATION = 1013,
    NETWORK_AUXILIARY_STATION_DATA = 1014,
    GPS_IONOSPHERIC_CORRECTION_DIFFERENCES = 1015,
    GPS_GEOMETRIC_CORRECTION_DIFFERENCES = 1016,
    GPS_COMBINED_CORRECTION_DIFFERENCES = 1017,
    GPS_SATELLITE_EPHEMERIS_DATA = 1019,
    GLONASS_SATELLITE_EPHEMERIS_DATA = 1020,
    HELMERT_ABRIDGED_MOLODENSKI_TRANSFORMATION_PARAMETERS = 1021,
    MOLODENSKI_BADEKAS_TRANSFORMATION_PARAMETERS = 1022,
    RESIDUALS_ELLIPSOIDAL_GRID_REPRESENTATION = 1023,
    RESIDUALS_PLANE_GRID_REPRESENTATION = 1024,
    PROJECTION_PARAMETERS_EXCEPT_LCC2SP_OM = 1025,
    PROJECTION_PARAMETERS_LCC2SP = 1026,
    PROJECTION_PARAMETERS_OM = 1027,
    UNICODE_TEXT_STRING = 1029,
    GPS_NETWORK_RTK_RESIDUAL = 1030,
    GLONASS_NETWORK_RTK_RESIDUAL = 1031,
    PHYSICAL_REFERENCE_STATION_POSITION = 1032,
    RECEIVER_ANTENNA_DESCRIPTOR = 1033,
    GPS_NETWORK_FKP_GRADIENT = 1034,
    GLONASS_NETWORK_FKP_GRADIENT = 1035,
    GLONASS_IONOSPHERIC_CORRECTION_DIFFERENCES = 1037,
    GLONASS_GEOMETRIC_CORRECTION_DIFFERENCES = 1038,
    GLONASS_COMBINED_CORRECTION_DIFFERENCES = 1039,
    IRNSS_SATELLITE_EPHEMERIS_DATA = 1041,
    BEIDOU_SATELLITE_EPHEMERIS_DATA = 1042,
    QZSS_SATELLITE_EPHEMERIS_DATA = 1044,
    GALILEO_F_NAV_SATELLITE_EPHEMERIS_DATA = 1045,
    GALILEO_I_NAV_SATELLITE_EPHEMERIS_DATA = 1046,
    SSR_GPS_ORBIT_CORRECTION = 1057,
    SSR_GPS_CLOCK_CORRECTION = 1058,
    SSR_GPS_CODE_BIAS = 1059,
    SSR_GPS_COMBINED_CORRECTION = 1060,
    SSR_GPS_URA = 1061,
    SSR_GPS_HIGH_RATE_CLOCK_CORRECTION = 1062,
    SSR_GLONASS_ORBIT_CORRECTION = 1063,
    SSR_GLONASS_CLOCK_CORRECTION = 1064,
    SSR_GLONASS_CODE_BIAS = 1065,
    SSR_GLONASS_COMBINED_CORRECTION = 1066,
    SSR_GLONASS_URA = 1067,
    SSR_GLONASS_HIGH_RATE_CLOCK_CORRECTION = 1068,
    GPS_MSM1 = 1071,
    GPS_MSM2 = 1072,
    GPS_MSM3 = 1073,
    GPS_MSM4 = 1074,
    GPS_MSM5 = 1075,
    GPS_MSM6 = 1076,
    GPS_MSM7 = 1077,
    GLONASS_MSM1 = 1081,
    GLONASS_MSM2 = 1082,
    GLONASS_MSM3 = 1083,
    GLONASS_MSM4 = 1084,
    GLONASS_MSM5 = 1085,
    GLONASS_MSM6 = 1086,
    GLONASS_MSM7 = 1087,
    GALILEO_MSM1 = 1091,
    GALILEO_MSM2 = 1092,
    GALILEO_MSM3 = 1093,
    GALILEO_MSM4 = 1094,
    GALILEO_MSM5 = 1095,
    GALILEO_MSM6 = 1096,
    GALILEO_MSM7 = 1097,
    SBAS_MSM1 = 1101,
    SBAS_MSM2 = 1102,
    SBAS_MSM3 = 1103,
    SBAS_MSM4 = 1104,
    SBAS_MSM5 = 1105,
    SBAS_MSM6 = 1106,
    SBAS_MSM7 = 1107,
    QZSS_MSM1 = 1111,
    QZSS_MSM2 = 1112,
    QZSS_MSM3 = 1113,
    QZSS_MSM4 = 1114,
    QZSS_MSM5 = 1115,
    QZSS_MSM6 = 1116,
    QZSS_MSM7 = 1117,
    BEIDOU_MSM1 = 1121,
    BEIDOU_MSM2 = 1122,
    BEIDOU_MSM3 = 1123,
    BEIDOU_MSM4 = 1124,
    BEIDOU_MSM5 = 1125,
    BEIDOU_MSM6 = 1126,
    BEIDOU_MSM7 = 1127,
    IRNSS_MSM1 = 1131,
    IRNSS_MSM2 = 1132,
    IRNSS_MSM3 = 1133,
    IRNSS_MSM4 = 1134,
    IRNSS_MSM5 = 1135,
    IRNSS_MSM6 = 1136,
    IRNSS_MSM7 = 1137,
    FUTURE_1_MSM1 = 1141,
    FUTURE_1_MSM2 = 1142,
    FUTURE_1_MSM3 = 1143,
    FUTURE_1_MSM4 = 1144,
    FUTURE_1_MSM5 = 1145,
    FUTURE_1_MSM6 = 1146,
    FUTURE_1_MSM7 = 1147,
    FUTURE_2_MSM1 = 1151,
    FUTURE_2_MSM2 = 1152,
    FUTURE_2_MSM3 = 1153,
    FUTURE_2_MSM4 = 1154,
    FUTURE_2_MSM5 = 1155,
    FUTURE_2_MSM6 = 1156,
    FUTURE_2_MSM7 = 1157,
    FUTURE_3_MSM1 = 1161,
    FUTURE_3_MSM2 = 1162,
    FUTURE_3_MSM3 = 1163,
    FUTURE_3_MSM4 = 1164,
    FUTURE_3_MSM5 = 1165,
    FUTURE_3_MSM6 = 1166,
    FUTURE_3_MSM7 = 1167,
    FUTURE_4_MSM1 = 1171,
    FUTURE_4_MSM2 = 1172,
    FUTURE_4_MSM3 = 1173,
    FUTURE_4_MSM4 = 1174,
    FUTURE_4_MSM5 = 1175,
    FUTURE_4_MSM6 = 1176,
    FUTURE_4_MSM7 = 1177,
    FUTURE_5_MSM1 = 1181,
    FUTURE_5_MSM2 = 1182,
    FUTURE_5_MSM3 = 1183,
    FUTURE_5_MSM4 = 1184,
    FUTURE_5_MSM5 = 1185,
    FUTURE_5_MSM6 = 1186,
    FUTURE_5_MSM7 = 1187,
    FUTURE_6_MSM1 = 1191,
    FUTURE_6_MSM2 = 1192,
    FUTURE_6_MSM3 = 1193,
    FUTURE_6_MSM4 = 1194,
    FUTURE_6_MSM5 = 1195,
    FUTURE_6_MSM6 = 1196,
    FUTURE_6_MSM7 = 1197,
    FUTURE_7_MSM1 = 1201,
    FUTURE_7_MSM2 = 1202,
    FUTURE_7_MSM3 = 1203,
    FUTURE_7_MSM4 = 1204,
    FUTURE_7_MSM5 = 1205,
    FUTURE_7_MSM6 = 1206,
    FUTURE_7_MSM7 = 1207,
    FUTURE_8_MSM1 = 1211,
    FUTURE_8_MSM2 = 1212,
    FUTURE_8_MSM3 = 1213,
    FUTURE_8_MSM4 = 1214,
    FUTURE_8_MSM5 = 1215,
    FUTURE_8_MSM6 = 1216,
    FUTURE_8_MSM7 = 1217,
    FUTURE_9_MSM1 = 1221,
    FUTURE_9_MSM2 = 1222,
    FUTURE_9_MSM3 = 1223,
    FUTURE_9_MSM4 = 1224,
    FUTURE_9_MSM5 = 1225,
    FUTURE_9_MSM6 = 1226,
    FUTURE_9_MSM7 = 1227,
    GLONASS_L1_L2_CODE_PHASE_BIASES = 1230,
    PROPRIETARY_ASHTECH = 4095,
    PROPRIETARY_TRIMBLE = 4094,
    PROPRIETARY_NOVATEL = 4093,
    PROPRIETARY_LEICA = 4092,
    PROPRIETARY_TOPCON = 4091,
    PROPRIETARY_GEO = 4090,
    PROPRIETARY_SEPTENTRIO = 4089,
    PROPRIETARY_IFEN = 4088,
    PROPRIETARY_FUGRO = 4087,
    PROPRIETARY_INPOSITION = 4086,
    PROPRIETARY_GSA = 4085,
    PROPRIETARY_GEODETICS = 4084,
    PROPRIETARY_DLR = 4083,
    PROPRIETARY_CRCSI = 4082,
    PROPRIETARY_SNUGL = 4081,
    PROPRIETARY_NAVCOM = 4080,
    PROPRIETARY_SCSC = 4079,
    PROPRIETARY_COMNAV = 4078,
    PROPRIETARY_HEMISPHERE = 4077,
    PROPRIETARY_IGS = 4076,
    PROPRIETARY_ALBERDING = 4075,
    PROPRIETARY_UNICORE = 4074,
    PROPRIETARY_MITSUBISHI = 4073,
    PROPRIETARY_UBLOX = 4072,
    PROPRIETARY_WNLBS = 4071,
    PROPRIETARY_MENGXIN = 4070,
    PROPRIETARY_VERIPOS = 4069,
    PROPRIETARY_QIANXUN = 4068,
    PROPRIETARY_CTTIC = 4067
}
export declare enum RtcmVersion {
    V3_0 = 3,
    V3_1 = 3.1,
    V3_2 = 3.2,
    V3_3 = 3.3,
    FUTURE = 4
}
export declare enum RtcmNavSystem {
    GPS = "GPS",
    GLONASS = "GLONASS",
    GALILEO = "GALILEO",
    QZSS = "QZSS",
    SBAS = "SBAS",
    BEIDOU = "BEIDOU",
    IRNSS = "IRNSS",
    FUTURE = "FUTURE"
}
export declare const MessageType: (type: RtcmMessageType) => <T extends RtcmMessage>(constructor: new (internalGuard: never) => T) => void;
export declare const Since: (version: RtcmVersion) => {
    (target: Function): void;
    (target: Object, propertyKey: string | symbol): void;
};
export declare const NavSystem: (version: RtcmNavSystem) => {
    (target: Function): void;
    (target: Object, propertyKey: string | symbol): void;
};
export declare abstract class RtcmMessage {
    static get decoderEncoder(): DecoderEncoder;
    static get sinceVersion(): RtcmVersion;
    static get navSystem(): RtcmNavSystem | null;
    static readonly messageType: RtcmMessageType;
    get messageType(): RtcmMessageType;
    constructor(internalGuard: never);
    static construct<T extends RtcmMessage, E extends keyof T = never, I = {}>(this: (new (internalGuard: never) => T) & {
        [constructPropertiesKey]: (exclude: E) => I;
    }, params: Omit<T, 'messageType' | FunctionKeys<T> | E> & I): T;
    static [constructPropertiesKey]: (exclude: never) => {};
}
export declare class RtcmMessageUnknown extends RtcmMessage {
    get messageType(): RtcmMessageType;
    readonly raw: Uint8Array;
}
export declare namespace RtcmTransport {
    const SYNC_CHAR = 211;
    const HEADER_SIZE = 3;
    const CRC_SIZE = 3;
    const MAX_PACKET_SIZE: number;
    class Exception extends Error {
        constructor(type: string, message: string);
    }
    class DecodeException extends Exception {
        constructor(message: string);
    }
    class EncodeException extends Exception {
        constructor(message: string);
    }
    function decode(buffer: Uint8Array): [RtcmMessage, number];
    function encode(message: RtcmMessage, buffer: Uint8Array): number;
    function crc24q(buffer: Uint8Array): number;
}
import './messages/index';
